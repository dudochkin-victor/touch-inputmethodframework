0.20.0
=======
* Removed MeeGo Touch from public API.
* Allow to build framework without MeeGo Touch (optional)
  - Use "$ qmake CONFIG=+nomeegotouch -r ." or
    "DEB_BUILD_OPTIONS=nomeegotouch".
* New helper classes:
  - MImGraphicsView: Use this widget if your input method plugin uses
    QGraphicsView (or QDeclarative*).
  - MImWidget: Use this widget if your input method offers a tradtional
    QWidget-based UI.
  - Both widgets boost render performance of input method plugins by using the
    framework's latest self-compositing feature. Check their documentation for
    subclassing advice. Also, in case you cannot reuse these classes, you need
    to use MAbstractInputMethodHost::background - if null, it can be ignored.
    Otherwise, it needs to be drawn into the background of your central widget
    (assuming full-screen widgets). For QWidgets, this can be done in
    QWidget::paintEvent. For QGraphicsView, it is required to override
    QGraphicsView::drawBackground instead.
  - MImHwKeyboardTracker: Tracks state (open/closed) of HW keyboard (does not
    provide any functionality yet when framework is build without MeeGo Touch
    support).
  - MImSettings: Currently a wrapper for GConf, but supposed to be extended for
    GConf-less platforms.
* API changes:
  - Removed MIMSettingsDialog (use settings applet instead).
    - Removed MAbstractInputMethodHost::showSettings, too. This means that IM
      plugins can no longer request the settings dialog.
  - Removed MPlainWindow.
  - MAbstractInputMethod:
    - c'tor now takes an additional QWidget parameter, the
      main window (top level widget) supplied by the framework. This frees
      plugins from using MPlainWindow. Plugins can now choose between
      traditonal QWidget UI's or QGraphicsView UI's (including MeeGo Touch and
      QML). Make sure to reparent your central widget to the main window.
    - centralWidget: Returns central widget of your plugin.
    - setCentralWidget: Sets central widget of your plugin. Important if you
      want to take advantage of self-composting by using MImGraphicsView or
      MImWidget.
  - MInputMethodPlugin:
    - createInputMethod: Takes an additional QWidget parameter, the main
      window. Parameter is supplied by framework.
  - MInputMethod namespace:
    - added OrientationAngle, Orientation, TextContentType (copied from MeeGo Touch)

0.19.41
=======
* API changes
- MAbstractInputMethod was changed. The method handleAppOrientationChange() was renamed as
handleAppOrientationChanged(), which means target application already finish changing
orientation. And there was a new method handleAppOrientationAboutToChange() says target
application is about to change orientation.
- Added X key event time parameter to MAbstractInputMethod::processKeyEvent().

0.19.39
======
* API changes
 - New entry setOrientationAngleLocked added to input-context D-Bus interface and 
   similar method added also to MInputContextConnection and MAbstractInputMethodHost.
 - Added MAbstractInputMethodHost::hiddenText()

0.19.37
=======
* API changes
 - MInputContextConnection was changed. Add new parameters replaceStart and replaceLength
 in sendPreeditString(). Add new parameters replaceStart, replaceLength and cursorPos in
 sendCommitString(). Add new pure virtual method setSelection().
 - MAbstractInputMethodHost was changed. Add new parameters replaceStart and replaceLength
 in sendPreeditString(). Add new parameters replaceStart, replaceLength and cursorPos in
 sendCommitString(). Add new pure virtual method setSelection().

0.19.32
=======
* API changes
 - Toolbar specification was changed. Add a new attibute "visible" for button.
   Check latest version of the specification in the file doc/src/toolbarxml.dox.
 - new variant of MToolbarItem::setVisible() with explicit visibility flag was added.

0.19.31
=======
* API changes
 - Parameters in MInputContext::updatePreedit() are changed to accept definitions
   of different formats for each part of preedit, and support to show cursor inside
   preedit.
 - A parameter cursorPos is added to MAbstractInputMethod::setPreedit().
 - Parameters in MInputMethodHost::sendPreeditString() are changed to accept definitions
   of different formats for each part of preedit, and support to show cursor inside
   preedit.
 - new struct PreeditTextFormat in namespace MInputMethod which defines the text format
   for the preedit string.
 - MAbstractInputMethodHost was changed. Add a new pure virtual method cursorRectangle().

0.19.30
=======
* API changes
 - Toolbar specification was changed. Add a new attibute "enabled" for button.
   Check latest version of the specification in the file doc/src/toolbarxml.dox.

0.19.27
=======

* API changes
 - MInputMethodBase was renamed to MAbstractInputMethod
 - MInputMethodSettingsBase was renamed to MAbstractInputMethodSettings
 - Removed region signal from MAbstractInputMethod and replaced them with
   setScreenRegion() and setInputMethodArea() in MAbstractInputMethodHost.
 - renamed in MAbstractInputMethod:
   - mouseClickedOnPreedit() -> handleMouseClickOnPreedit(
   - focusChanged() -> handleFocusChange()
   - visualizationPriorityChanged() -> handleVisualizationPriorityChange
   - appOrientationChanged() -> handleAppOrientationChange()
   - clientChanged -> handleClientChange()

0.19.26
========

* API changes
 - A request type parameter was added to MInputContext::keyEvent to
   allow signal only and event only key events.
 - Similar change to MInputContextConnection::sendKeyEvent and the "keyEvent"
   method in DBUS interface "com.meego.inputmethod.inputcontext1".
 - Removed MInputContextConnection from public API and replaced it with
   MAbstractInputMethodHost for MInputMethodBase.
 - Removed some ...Requsted() signals from MInputMethodBase and replaced with
   methods in MAbstractInputMethodHost
 - Removed indicator setting from MInputMethodBase and replaced with method on
   MAbstractInputMethodHost. Moved the indicator enum to MInputMethod namespace.
 - Changed the D-Bus interface of MIMPluginManager to use meego prefix.

0.19.24
========

* API changes
 - Toolbar specification was changed.
   Check latest version of the specification in the file doc/src/toolbarxml.dox
 - class MToolbarRow was removed

0.19.22
========

* API changes
 - moved contents from mpreeditface.h, mimdirection.h and mimhandlerstate.h
   to minputmethodnamespace.h using "MInputMethod" namespace.
   Also renamed MInputMethodSwitchDirection -> SwitchDirection.

- Moved headers out of meegotouch dir to /usr/include/meegoimframework/

0.19.21
========

* API changes
 - MInputContext::keyEvent will always emit a signal, additional parameter "signalOnly"
   is used to suppress delivering the KeyEvent to focused widget.
 - D-BUS message "keyEvent" in interface "com.meego.inputmethod.inputcontext1" has new
   boolean parameter to match the new parameter in MInputContext::keyEvent

0.19.20
========

* Uses MInputMethodState signals for notifying application for real hw keyboard signals

0.19.19
========

* API changes
 - Public API of MToolbarData and MToolbarRow was changed, most of methods are private now.
 - Source code of MToolbarRow and MToolbarLayout was moved to dedicated files, so you need
   to include mtoolbarrow.h and mtoolbarlayout.h if you want to use that classes.

